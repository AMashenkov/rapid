syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.vrg.rapid.pb";
option java_outer_classname = "Remoting";

package remoting;

service MembershipService {
  rpc receiveJoinMessage (JoinMessage) returns (JoinResponse) {}
  rpc receiveJoinPhase2Message (JoinMessage) returns (JoinResponse) {}
  rpc receiveLinkUpdateMessage (BatchedLinkUpdateMessage) returns (Response) {}
  rpc gossip (GossipMessage) returns (GossipResponse) {}
}


// ******* Join protocol messages *******

// TODO: JoinMessage and JoinResponse are overloaded because they are being used for phase 1 and 2 of the bootstrap.
message JoinMessage
{
   string sender = 1;
   string uuid = 2;
   int32 ringNumber = 3;
   int64 configurationId = 4;
}

message JoinResponse
{
   string sender = 1;
   JoinStatusCode statusCode = 2;
   int64 configurationId = 3;
   repeated bytes hosts = 4;
   repeated bytes identifiers = 5;
}

enum JoinStatusCode {
    HOSTNAME_ALREADY_IN_RING = 0;
    UUID_ALREADY_IN_RING = 1;
    SAFE_TO_JOIN = 2;
    CONFIG_CHANGED = 3;
};

// ******* LinkUpdate messages *******

message BatchedLinkUpdateMessage
{
    string sender = 1;
    repeated LinkUpdateMessage messages = 2;
}

message LinkUpdateMessage
{
    string linkSrc = 2;
    string linkDst = 3;
    LinkStatus linkStatus = 4;
    int64 configurationId = 5;
    string uuid = 6;      // Required for join protocol
    int32 ringNumber = 7;
}

enum LinkStatus {
    UP = 0;
    DOWN = 1;
};

message Response
{
}

// ******* Gossip messages *******

message GossipMessage
{
    string messageId = 1;
    int32 ttl = 2;
    repeated LinkUpdateMessage linkUpdateMessage = 3;
}

message GossipResponse
{
}
